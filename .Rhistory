setwd("C:/Users/Edmond/OneDrive - Université Côte d'Azur/Documents/Cours/Cours Polytech/GB4/S1/Stat/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
mymodelD = lm(data$bmi ~ data$Albumin.adduct.of.Nacetylcysteine)
summary(mymodelD)
#-> // non adduite (= non modifié)
plot(data$bmi, data$Albumin.adduct.of.Nacetylcysteine)
library(ggplot2)
#Box plot de la modif de l'albumine en f° du statut fumeur (avant suppression valeurs abbérantes)
#albumine avec N-acetylcysteine en f° du statut fumeur
ggplot(data, aes(x = smoking_status, y = Albumin.adduct.of.Nacetylcysteine, fill = smoking_status)) +
geom_boxplot(alpha = 0.3) +
labs(title = "Boxplot de la modification de l'albumine en fonction du statut fumeur (avant suppression valeurs abbérantes)",
x = "Statut fumeur",
y = "Albumine avec N-acetylcysteine") +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm"))
#Box plot de la modif de l'albumine en f° du statut fumeur (après suppression valeurs abbérantes)
#albumine avec N-acetylcysteine en f° du statut fumeur
ggplot(data, aes(x = smoking_status, y = Nacetyl_corr , fill = smoking_status)) +
geom_boxplot(alpha = 0.3) +
labs(title = "Boxplot de la modification de l'albumine en fonction du statut fumeur (après suppresion valeurs abbérantes",
x = "Statut fumeur",
y = "Albumine avec N-acetylcysteine") +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm"))
getwd()
setwd("C:/Users/Edmond/OneDrive - Université Côte d'Azur/Documents/Cours/Cours Polytech/GB4/S1/Stat/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
data
View(data)
getwd()
setwd("C:/Users/Edmond/OneDrive - Université Côte d'Azur/Documents/Cours/Cours Polytech/GB4/S1/Stat/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
data
View(data)
# Partie 1
dim(data)
summary(data)
# Détail des moyennes et écart types des Albumines
summary(data$Albumin.adduct.of.CysGly)
summary(data$Albumin.adduct.of.Nacetylcysteine)
summary(data$Albumin.adduct.of.sulfonic.acid)
summary(data$Albumin.unadducted)
table(data$gender)
table(data$centre)
table(data$smoking_status)
table(data$case)
table(data$case, data$gender)
table(data$case, data$smoking_status)
hist(data$age.recr)
qqnorm(data$age.recr)
shapiro.test(data$age.recr)
View(data)
getwd()
setwd("C:/Users/auror/OneDrive - Université Nice Sophia Antipolis/Documents/GitHub/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
data
View(data)
# Partie 1
dim(data)
summary(data)
# Détail des moyennes et écart types des Albumines
summary(data$Albumin.adduct.of.CysGly)
summary(data$Albumin.adduct.of.Nacetylcysteine)
summary(data$Albumin.adduct.of.sulfonic.acid)
summary(data$Albumin.unadducted)
table(data$gender)
table(data$centre)
table(data$smoking_status)
table(data$case)
table(data$case, data$gender)
table(data$case, data$smoking_status)
par(mfrow = c(1, 1))
hist(data$age.recr)
qqnorm(data$age.recr)
shapiro.test(data$age.recr)
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
(moyennes_par_etat = tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, mean))
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, sd)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "CysGly", ylim = c(0,500))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Sulfonic", ylim = c(0,100) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.unadducted, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,700))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, mean)
getwd()
setwd("C:/Users/auror/OneDrive - Université Nice Sophia Antipolis/Documents/GitHub/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
data
View(data)
# Partie 1
dim(data)
summary(data)
# Détail des moyennes et écart types des Albumines
summary(data$Albumin.adduct.of.CysGly)
summary(data$Albumin.adduct.of.Nacetylcysteine)
summary(data$Albumin.adduct.of.sulfonic.acid)
summary(data$Albumin.unadducted)
table(data$gender)
table(data$centre)
table(data$smoking_status)
table(data$case)
table(data$case, data$gender)
table(data$case, data$smoking_status)
par(mfrow = c(1, 1))
hist(data$age.recr)
qqnorm(data$age.recr)
shapiro.test(data$age.recr)
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
(moyennes_par_etat = tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, mean))
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, sd)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "CysGly", ylim = c(0,500))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Sulfonic", ylim = c(0,100) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.unadducted, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,700))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,4) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.CysGly, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.CysGly, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "CysGly", ylim = c(0,450))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.sulfonic.acid, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.sulfonic.acid, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Sulfonic", ylim = c(0,50))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.unadducted, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,600) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
#Histogramme
hist(log(data$Albumin.adduct.of.Nacetylcysteine))
wilcox.test(data$Albumin.adduct.of.Nacetylcysteine[data$case=="1"],data$Albumin.adduct.of.Nacetylcysteine[data$case=="0"])
hist(data$Albumin.adduct.of.CysGly)
wilcox.test(data$Albumin.adduct.of.CysGly[data$case=="1"],data$Albumin.adduct.of.CysGly[data$case=="0"])
hist(data$Albumin.adduct.of.sulfonic.acid)
wilcox.test(data$Albumin.adduct.of.sulfonic.acid[data$case=="1"],data$Albumin.adduct.of.sulfonic.acid[data$case=="0"])
hist(data$Albumin.unadducted)
wilcox.test(data$Albumin.unadducted[data$case=="1"],data$Albumin.unadducted[data$case=="0"])
mymodel = glm(data$case ~data$Albumin.adduct.of.Nacetylcysteine)
summary(mymodel)
mymodel2 = glm(data$case ~ data$Albumin.adduct.of.CysGly)
summary(mymodel2)
mymodel3 = glm(data$case ~ data$Albumin.adduct.of.sulfonic.acid)
summary(mymodel3)
mymodel4 = glm(data$case ~ data$smoking_status)
summary(mymodel4)
# Visualisation de la corrélation entre les 4 variables numériques
test = data.frame(data$Albumin.adduct.of.Nacetylcysteine, data$Albumin.adduct.of.CysGly, data$Albumin.unadducted, data$Albumin.adduct.of.sulfonic.acid)
pairs(test)
library(ggcorrplot)
matrice_corr = cor(test)
ggcorrplot(matrice_corr)
install.packages("GGally")
library(GGally)
ggpairs(data.frame(data$Albumin.adduct.of.Nacetylcysteine, data$Albumin.adduct.of.CysGly, data$Albumin.unadducted, data$Albumin.adduct.of.sulfonic.acid))
# Calcul des proportions avec prop.table
(proportion <- prop.table(table(data$smoking_status)))
Légende = names(proportion)
library(ggplot2)
# Création du graphique circulaire
ggplot(NULL, aes(x = "", y = proportion, fill = Légende)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73")) +
labs(title = "Diagramme circulaire représentant les\n proportions des états tabagiques") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm")) +
geom_text(aes(label = paste0(round(proportion * 100), "%")), position = position_stack(vjust = 0.5), size = 5)
(proportion2 <- prop.table(table(data$smoking_status[data$case == "1"])))
Légende = names(proportion2)
library(ggplot2)
# Création du graphique circulaire
ggplot(NULL, aes(x = "", y = proportion2, fill = Légende)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73")) +
labs(title = "Diagramme circulaire représentant les\n proportions des états tabagiques") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm")) +
geom_text(aes(label = paste0(round(proportion2 * 100), "%")), position = position_stack(vjust = 0.5), size = 5)
# Partie 1
dim(data)
summary(data)
# Partie 1
dim(data)
summary(data)
table(data$gender)
table(data$centre)
table(data$smoking_status)
table(data$case)
table(data$case, data$gender)
# Détail des moyennes et écart types des Albumines
summary(data$Albumin.adduct.of.CysGly)
summary(data$Albumin.adduct.of.Nacetylcysteine)
summary(data$Albumin.adduct.of.sulfonic.acid)
summary(data$Albumin.unadducted)
table(data$case, data$gender)
table(data$case, data$smoking_status)
par(mfrow = c(1, 1))
hist(data$age.recr)
qqnorm(data$age.recr)
shapiro.test(data$age.recr)
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
#L'ensemble des individus 54 Hommes et 96 des Femmes.
Data = `LungCancer2`
table(Data$gender)
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
getwd()
setwd("C:/Users/auror/OneDrive - Université Nice Sophia Antipolis/Documents/GitHub/Projet-R-GB4")
data = read.csv("LC-Adductomics.csv")
data
View(data)
# Partie 1
dim(data)
summary(data)
# Détail des moyennes et écart types des Albumines
summary(data$Albumin.adduct.of.CysGly)
summary(data$Albumin.adduct.of.Nacetylcysteine)
summary(data$Albumin.adduct.of.sulfonic.acid)
summary(data$Albumin.unadducted)
table(data$gender)
table(data$centre)
table(data$smoking_status)
table(data$case)
table(data$case, data$gender)
table(data$case, data$smoking_status)
par(mfrow = c(1, 1))
hist(data$age.recr)
qqnorm(data$age.recr)
shapiro.test(data$age.recr)
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
par(mfrow = c(1,1 ))
# Crée un vecteur pour les moyennes et comparaison en fonction des statut tabagique
(moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, mean))
# Ecart type
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$smoking_status, sd)
# barplot
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,5) )
# Barre d'erreur sd
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
(moyennes_par_etat = tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, mean))
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.CysGly, data$smoking_status, sd)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "CysGly", ylim = c(0,500))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.adduct.of.sulfonic.acid, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Sulfonic", ylim = c(0,100) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$smoking_status, sd)
(moyennes_par_etat = tapply(data$Albumin.unadducted, data$smoking_status, mean))
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,700))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,4) )
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.unadducted, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,600) )
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.Nacetylcysteine, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Nacetylcystéine", ylim = c(0,4) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.CysGly, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.CysGly, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "CysGly", ylim = c(0,450))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.adduct.of.sulfonic.acid, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.adduct.of.sulfonic.acid, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Sulfonic", ylim = c(0,50))
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.unadducted, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,600) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
#Histogramme
hist(log(data$Albumin.adduct.of.Nacetylcysteine))
wilcox.test(data$Albumin.adduct.of.Nacetylcysteine[data$case=="1"],data$Albumin.adduct.of.Nacetylcysteine[data$case=="0"])
ecart_types_par_etat <- tapply(data$Albumin.unadducted, data$case, sd)
moyennes_par_etat = tapply(data$Albumin.unadducted, data$case, mean)
bp = barplot(height = moyennes_par_etat, col = "skyblue", main = "Non lié", ylim = c(0,600) )
arrows(bp, moyennes_par_etat, bp, moyennes_par_etat + ecart_types_par_etat, angle = 90, code = 3, length = 0.1, col = "black")
#Histogramme
hist(log(data$Albumin.adduct.of.Nacetylcysteine))
wilcox.test(data$Albumin.adduct.of.Nacetylcysteine[data$case=="1"],data$Albumin.adduct.of.Nacetylcysteine[data$case=="0"])
hist(data$Albumin.adduct.of.CysGly)
wilcox.test(data$Albumin.adduct.of.CysGly[data$case=="1"],data$Albumin.adduct.of.CysGly[data$case=="0"])
#Histogramme
hist(log(data$Albumin.adduct.of.Nacetylcysteine))
wilcox.test(data$Albumin.adduct.of.Nacetylcysteine[data$case=="1"],data$Albumin.adduct.of.Nacetylcysteine[data$case=="0"])
hist(data$Albumin.adduct.of.CysGly)
wilcox.test(data$Albumin.adduct.of.CysGly[data$case=="1"],data$Albumin.adduct.of.CysGly[data$case=="0"])
hist(data$Albumin.adduct.of.sulfonic.acid)
wilcox.test(data$Albumin.adduct.of.sulfonic.acid[data$case=="1"],data$Albumin.adduct.of.sulfonic.acid[data$case=="0"])
#Histogramme
hist(log(data$Albumin.adduct.of.Nacetylcysteine))
wilcox.test(data$Albumin.adduct.of.Nacetylcysteine[data$case=="1"],data$Albumin.adduct.of.Nacetylcysteine[data$case=="0"])
hist(data$Albumin.adduct.of.CysGly)
wilcox.test(data$Albumin.adduct.of.CysGly[data$case=="1"],data$Albumin.adduct.of.CysGly[data$case=="0"])
hist(data$Albumin.adduct.of.sulfonic.acid)
wilcox.test(data$Albumin.adduct.of.sulfonic.acid[data$case=="1"],data$Albumin.adduct.of.sulfonic.acid[data$case=="0"])
hist(data$Albumin.unadducted)
wilcox.test(data$Albumin.unadducted[data$case=="1"],data$Albumin.unadducted[data$case=="0"])
mymodel = glm(data$case ~data$Albumin.adduct.of.Nacetylcysteine)
summary(mymodel)
mymodel2 = glm(data$case ~ data$Albumin.adduct.of.CysGly)
summary(mymodel2)
mymodel3 = glm(data$case ~ data$Albumin.adduct.of.sulfonic.acid)
summary(mymodel3)
mymodel4 = glm(data$case ~ data$smoking_status)
summary(mymodel4)
# Visualisation de la corrélation entre les 4 variables numériques
test = data.frame(data$Albumin.adduct.of.Nacetylcysteine, data$Albumin.adduct.of.CysGly, data$Albumin.unadducted, data$Albumin.adduct.of.sulfonic.acid)
pairs(test)
library(ggcorrplot)
matrice_corr = cor(test)
ggcorrplot(matrice_corr)
install.packages("GGally")
install.packages("GGally")
library(GGally)
ggpairs(data.frame(data$Albumin.adduct.of.Nacetylcysteine, data$Albumin.adduct.of.CysGly, data$Albumin.unadducted, data$Albumin.adduct.of.sulfonic.acid))
# Calcul des proportions avec prop.table
(proportion <- prop.table(table(data$smoking_status)))
Légende = names(proportion)
library(ggplot2)
# Création du graphique circulaire
ggplot(NULL, aes(x = "", y = proportion, fill = Légende)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73")) +
labs(title = "Diagramme circulaire représentant les\n proportions des états tabagiques") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm")) +
geom_text(aes(label = paste0(round(proportion * 100), "%")), position = position_stack(vjust = 0.5), size = 5)
(proportion2 <- prop.table(table(data$smoking_status[data$case == "1"])))
Légende = names(proportion2)
library(ggplot2)
# Création du graphique circulaire
ggplot(NULL, aes(x = "", y = proportion2, fill = Légende)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73")) +
labs(title = "Diagramme circulaire représentant les\n proportions des états tabagiques") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 14)) +
theme(plot.margin = unit(c(1, 0.5, 1, 1), "cm")) +
geom_text(aes(label = paste0(round(proportion2 * 100), "%")), position = position_stack(vjust = 0.5), size = 5)
